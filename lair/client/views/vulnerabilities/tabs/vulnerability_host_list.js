// Copyright (c) 2014 Tom Steele, Dan Kottmann, FishNet Security
// See the file license.txt for copying permission

Template.vulnerabilityHostList.projectId = function() {
  return Session.get('projectId');
};

Template.vulnerabilityHostList.vulnerabilityId = function() {
  return Session.get('vulnerabilityId');
};

Template.vulnerabilityHostList.hosts = function() {
  var projectId = Session.get('projectId');
  var vulnerabilityId = Session.get('vulnerabilityId');
  var vulnerability = Vulnerabilities.findOne({"project_id": projectId, "_id": vulnerabilityId});
  if (!vulnerability) {
    return false;
  }
  var hosts = vulnerability.hosts;
  hosts.forEach(function(host){
    var realHost = Hosts.findOne({"project_id": projectId, "string_addr": host.string_addr});
    host.hostId = realHost._id;
    host.long_addr = realHost.long_addr;
    host.portId = Ports.findOne({"project_id": projectId, "host_id": host.hostId, "port": host.port, "protocol": host.protocol})._id;
  });
  return hosts.sort(sortLongAddr);
};

Template.vulnerabilityHostList.events({
  'click #remove-hosts': function() {
    var projectId = Session.get('projectId');
    var vulnerabilityId = Session.get('vulnerabilityId');
    var hostIds = [];
    var inputs = $('.host-checked');
    inputs.each(function(){
      if ($(this).is(':checked')) {
        hostIds.push($(this).attr('id'));
      }
    });
    hostIds.forEach(function(id) {
      var data = id.split('-');
      Meteor.call('removeHostFromVulnerability', projectId, vulnerabilityId, data[0], parseInt(data[1]), data[2]);
    });
  }
});
